{"version":3,"sources":["components/Navbar.js","components/Main.js","components/App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","id","this","props","account","Component","Main","_this","onSubmit","event","preventDefault","name","productName","value","price","window","web3","utils","toWei","productPrice","toString","createProduct","type","ref","input","placeholder","required","scope","products","filter","product","map","key","fromWei","owner","onClick","purchaseProduct","target","removeProduct","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","productCount","loading","bind","assertThisInitialized","ethereum","Web3","request","method","currentProvider","alert","eth","getAccounts","accounts","setState","net","getId","networkId","loadMarketplace","on","newAccounts","_this2","toChecksumAddress","newNetworkId","parseInt","setInterval","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","loadBlockchainData","abrupt","sent","stop","console","log","networkData","Marketplace","networks","marketplace","Contract","abi","address","methods","i","push","_this3","send","from","once","receipt","error","_this4","_this5","components_Navbar","role","components_Main","Boolean","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e2e967a6.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\r\n        <ul className=\"navbar-nav px-3\">\r\n          <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\r\n            <small className=\"text-white\"><span id=\"title\">smart marketplace</span></small>\r\n          </li>\r\n        </ul>\r\n        <ul className=\"navbar-nav px-3\">\r\n          <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\r\n            <small className=\"text-white\"><span id=\"account\">{this.props.account}</span></small>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from 'react';\r\n\r\nclass Main extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"content\">\r\n        <h1>Add Product</h1>\r\n        <form onSubmit={(event) => {\r\n          event.preventDefault()\r\n          const name = this.productName.value\r\n          const price = window.web3.utils.toWei(this.productPrice.value.toString(), 'Ether')\r\n          this.props.createProduct(name, price)\r\n        }}>\r\n          <div className=\"form-group mr-sm-2\">\r\n            <input\r\n              id=\"productName\"\r\n              type=\"text\"\r\n              ref={(input) => { this.productName = input }}\r\n              className=\"form-control\"\r\n              placeholder=\"Product Name\"\r\n              required />\r\n          </div>\r\n          <div className=\"form-group mr-sm-2\">\r\n            <input\r\n              id=\"productPrice\"\r\n              type=\"text\"\r\n              ref={(input) => { this.productPrice = input }}\r\n              className=\"form-control\"\r\n              placeholder=\"Product Price\"\r\n              required />\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-primary\">Add Product</button>\r\n        </form>\r\n        <p> </p>\r\n        <h2>Buy Product</h2>\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">#</th>\r\n              <th scope=\"col\">Name</th>\r\n              <th scope=\"col\">Price</th>\r\n              <th scope=\"col\">Owner</th>\r\n              <th scope=\"col\"></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody id=\"productList\">\r\n            {this.props.products.filter(product => product.name).map((product, key) => {\r\n              return (\r\n                <tr key={key}>\r\n                  <th scope=\"row\">{product.id.toString()}</th>\r\n                  <td>{product.name}</td>\r\n                  <td>{window.web3.utils.fromWei(product.price.toString(), 'Ether')} Eth</td>\r\n                  <td>{product.owner}</td>\r\n                  <td>\r\n                    {product.owner !== this.props.account\r\n                      ? <button\r\n                        name={product.id}\r\n                        value={product.price}\r\n                        onClick={(event) => {\r\n                          this.props.purchaseProduct(event.target.name, event.target.value)\r\n                        }}\r\n                      >\r\n                        Buy\r\n                      </button>\r\n                      : <button\r\n                        name={product.id}\r\n                        value={product.price}\r\n                        onClick={(event) => {\r\n                          this.props.removeProduct(event.target.name)\r\n                        }}\r\n                      >\r\n                        Remove\r\n                      </button>\r\n                    }\r\n                  </td>\r\n                </tr>\r\n              )\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Navbar from './Navbar'\r\nimport Main from './Main'\r\nimport Web3 from 'web3'\r\nimport Marketplace from '../abis/Marketplace.json'\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      account: '',\r\n      productCount: 0,\r\n      products: [],\r\n      loading: true\r\n    }\r\n    this.createProduct = this.createProduct.bind(this)\r\n    this.removeProduct = this.removeProduct.bind(this)\r\n    this.purchaseProduct = this.purchaseProduct.bind(this)\r\n  }\r\n\r\n  async componentWillMount() {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum)\r\n      await window.ethereum.request({ method: 'eth_requestAccounts' })\r\n    } else if (window.web3) {\r\n      window.web3 = new Web3(window.web3.currentProvider)\r\n    } else {\r\n      window.alert('Non-Ethereum browser detected. Consider trying MetaMask.')\r\n      return\r\n    }\r\n    const accounts = await window.web3.eth.getAccounts()\r\n    this.setState({ account: accounts[0] })\r\n    const networkId = await window.web3.eth.net.getId()\r\n    await this.loadMarketplace(networkId)\r\n    window.ethereum.on('accountsChanged', (newAccounts) => this.setState({ account: window.web3.utils.toChecksumAddress(newAccounts[0]) }))\r\n    window.ethereum.on('chainChanged', (newNetworkId) => this.loadMarketplace(parseInt(newNetworkId, 16)))\r\n    setInterval(async () => await this.loadBlockchainData(), 10000)\r\n  }\r\n\r\n  async loadMarketplace(networkId) {\r\n    console.log(networkId)\r\n    networkId = networkId === 1337 ? 5777 : networkId\r\n    const networkData = Marketplace.networks[networkId]\r\n    if (networkData) {\r\n      const marketplace = new window.web3.eth.Contract(Marketplace.abi, networkData.address)\r\n      this.setState({ marketplace })\r\n      await this.loadBlockchainData()\r\n      this.setState({ loading: false })\r\n    } else {\r\n      window.alert('Marketplace contract not deployed to detected network.')\r\n    }\r\n  }\r\n\r\n  async loadBlockchainData() {\r\n    const productCount = await this.state.marketplace.methods.productCount().call()\r\n    this.setState({ productCount })\r\n    const products = []\r\n    for (var i = 1; i <= productCount; i++) {\r\n      const product = await this.state.marketplace.methods.products(i).call()\r\n      products.push(product)\r\n    }\r\n    this.setState({ products })\r\n  }\r\n\r\n  createProduct(name, price) {\r\n    this.setState({ loading: true })\r\n    this.state.marketplace.methods.createProduct(name, price).send({ from: this.state.account })\r\n      .once('receipt', (receipt) => {\r\n        this.loadBlockchainData()\r\n        this.setState({ loading: false })\r\n      })\r\n      .on('error', (error) => this.setState({ loading: false }))\r\n  }\r\n\r\n  removeProduct(id) {\r\n    this.setState({ loading: true })\r\n    this.state.marketplace.methods.removeProduct(id).send({ from: this.state.account })\r\n      .once('receipt', (receipt) => {\r\n        this.loadBlockchainData()\r\n        this.setState({ loading: false })\r\n      })\r\n      .on('error', (error) => this.setState({ loading: false }))\r\n  }\r\n\r\n  purchaseProduct(id, price) {\r\n    this.setState({ loading: true })\r\n    this.state.marketplace.methods.purchaseProduct(id).send({ from: this.state.account, value: price })\r\n      .once('receipt', (receipt) => {\r\n        this.loadBlockchainData()\r\n        this.setState({ loading: false })\r\n      })\r\n      .on('error', (error) => this.setState({ loading: false }))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar account={this.state.account} />\r\n        <div className=\"container-fluid mt-5\">\r\n          <div className=\"row\">\r\n            <main role=\"main\" className=\"col-lg-12 d-flex\">\r\n              {this.state.loading\r\n                ? <div id=\"loader\" className=\"text-center\"><p className=\"text-center\">Loading...</p></div>\r\n                : <Main\r\n                  account={this.state.account}\r\n                  products={this.state.products}\r\n                  createProduct={this.createProduct}\r\n                  removeProduct={this.removeProduct}\r\n                  purchaseProduct={this.purchaseProduct} />\r\n              }\r\n            </main>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}